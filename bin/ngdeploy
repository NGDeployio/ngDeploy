#! /usr/bin/env node
'use strict';

var program = require('commander')
    , ng    = require('../lib/cli')
    , pkg   = require('../package');

const chalk = require("chalk");

program
    .version(pkg.version);

program
    .command('init <appName> <dist>')
    .option("-a, --accountToken <token>","Set the access token")
    .description("Initialize ngdeploy with <appName> and <distribution folder>")
    .action(function(appName,dist,opts){
            ng.init(appName,dist,opts);
    });

program
    .command('create <appName>')
    .option("-a, --accountToken <token>","use the access token")
    .description("Create the app <appName>")
    .action(function(appName,opts){
        ng.create({ngDeployUrl: appName, name: appName},opts.accountToken);
    });

program
    .command('push')
    .description('push the distribution folder into the cloud. Take it away!')
    .action(ng.push);

program
    .command('set')
    .option("-g, --global", "set globally into ~/.ngdeploy", null,0)
    .option("-a, --accountToken <token>","set the account token")
    .action(function(opts){
        ng.setAccountToken(opts.accountToken,opts.global);
    });

program
    .command('promote')
    .option("-t, --to <target>","what stage to promote to [staging,production]",/^(staging|production)$/i,"staging")
    .description('Promote an application to staging or production.')
    .action(function(opts){
        console.log(opts);
        if(typeof opts["to"] != "undefined"){
            ng.promote(opts["to"]);
        }
    });

program
    .command('list')
    .option("-a, --accountToken <token>","use the account token")
    .description('list all of your apps')
    .action(function(opts){
        ng.list(opts.accountToken);
    });

program
    .command('clean')
    .description('remove configuration')
    .action(ng.clean);

program.on('--help', function(){
    ng.additional_help()
});

program.parse(process.argv);

if(program.args.length==0)
    ng.usage();
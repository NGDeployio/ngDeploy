#! /usr/bin/env node
'use strict';

var program = require('commander')
    , ng    = require('../lib/cli')
    , pkg   = require('../package');

const chalk = require("chalk");

program
    .version(pkg.version);

program
    .option("-t,--test","Test mode that avoids ajax requests.");

program
    .command('init <appName> <dist>')
    .option("-a, --accessToken <token>","Set the access token")
    .description("Initialize ngdeploy with <appName> and <distribution folder>")
    .action(function(appName,dist,opts){
            ng.init(appName,dist,opts);
    });

program
    .command('create <appName>')
    .option("-a, --accessToken <token>","use the access token")
    .description("Create the app <appName>")
    .action(function(appName,opts){
        ng.create({ngDeployUrl: appName, name: appName},opts.accessToken);
    });

program
    .command('upload')
    .description('upload the distribution folder into the cloud. Take it away!')
    .action(ng.upload);

program
    .command('set')
    .option("-g, --global", "set globally into ~/.ngdeploy", null,0)
    .option("-a, --accessToken <token>","use the access token")
    .action(function(opts){
        ng.setAccessKey(opts.accessToken,opts.global);
    });

program
    .command('set')
    .option("-a, --accessToken <token>","use the access token")
    .action(function(opts){
        ng.setAccessKey(opts.accessToken,0);
    });

//program
//    .command('delete <appname>')
//    .option("-a, --accessToken <token>","use the access token")
//    .description('delete an app from the server.')
//    .action(function(args, opts){
//        ng.delete(args, opts.accessToken);
//    });


program
    .command('promote')
    .option("-t, --to <source>","what stage to promote to [staging,production]",/^(staging|production)$/i,"staging")
    //.option("--target <target>","set target [stage,prod]",/^(stage|prod)$/i,"stage")
    .description('Promote an application to staging or production.')
    .action(function(opts){
        ng.promote(opts["to"]);
    });

program
    .command('list')
    .option("-a, --accessToken <token>","use the access token")
    .description('list all of your apps')
    .action(function(opts){
        ng.list(opts.accessToken);
    });

program
    .command('clean')
    .description('remove configuration')
    .action(ng.clean);

program.on('--help', function(){
    ng.additional_help()
});

ng.readngdeploy();
program.parse(process.argv);

if(program.args.length==0)
        ng.usage();